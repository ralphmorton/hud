-- File auto generated by purescript-bridge! --
module HUD.Dashboard.Data.Relational


where
import Data.Argonaut.Decode (class DecodeJson, decodeJson)
import Data.Argonaut.Encode (class EncodeJson, encodeJson)
import Data.Argonaut.Generic.Aeson as Aeson


import Data.Lens (Iso', Lens', Prism', lens, prism')
import Data.Lens.Iso.Newtype (_Newtype)
import Data.Lens.Record (prop)
import Data.Maybe (Maybe(..))
import Data.Newtype (class Newtype)
import Data.Symbol (SProxy(SProxy))
import Prim (String)

import Prelude
import Data.Generic (class Generic)

data UserLevel =
    Owner
  | Unprivileged

derive instance genericUserLevel :: Generic UserLevel


--------------------------------------------------------------------------------
_Owner :: Prism' UserLevel Unit
_Owner = prism' (\_ -> Owner) f
  where
    f Owner = Just unit
    f _ = Nothing

_Unprivileged :: Prism' UserLevel Unit
_Unprivileged = prism' (\_ -> Unprivileged) f
  where
    f Unprivileged = Just unit
    f _ = Nothing

--------------------------------------------------------------------------------
newtype UserKey =
    UserKey {
      unUserKey :: String
    }

derive instance genericUserKey :: Generic UserKey

derive instance newtypeUserKey :: Newtype UserKey _


--------------------------------------------------------------------------------
_UserKey :: Iso' UserKey { unUserKey :: String}
_UserKey = _Newtype

unUserKey :: Lens' UserKey String
unUserKey = _Newtype <<< prop (SProxy :: SProxy "unUserKey")

--------------------------------------------------------------------------------
newtype AccountKey =
    AccountKey {
      unAccountKey :: String
    }

derive instance genericAccountKey :: Generic AccountKey

derive instance newtypeAccountKey :: Newtype AccountKey _


--------------------------------------------------------------------------------
_AccountKey :: Iso' AccountKey { unAccountKey :: String}
_AccountKey = _Newtype

unAccountKey :: Lens' AccountKey String
unAccountKey = _Newtype <<< prop (SProxy :: SProxy "unAccountKey")

--------------------------------------------------------------------------------
newtype Account =
    Account {
      accountName :: String
    }

derive instance genericAccount :: Generic Account

derive instance newtypeAccount :: Newtype Account _


--------------------------------------------------------------------------------
_Account :: Iso' Account { accountName :: String}
_Account = _Newtype

accountName :: Lens' Account String
accountName = _Newtype <<< prop (SProxy :: SProxy "accountName")

--------------------------------------------------------------------------------
derive instance eqUserLevel :: Eq UserLevel
instance decodeUserLevel :: DecodeJson UserLevel where
    decodeJson = Aeson.decodeJson
instance encodeUserLevel :: EncodeJson UserLevel where
    encodeJson = Aeson.encodeJson
derive instance eqUserKey :: Eq UserKey
instance decodeUserKey :: DecodeJson UserKey where
    decodeJson = Aeson.decodeJson
instance encodeUserKey :: EncodeJson UserKey where
    encodeJson = Aeson.encodeJson
derive instance eqAccountKey :: Eq AccountKey
instance decodeAccountKey :: DecodeJson AccountKey where
    decodeJson = Aeson.decodeJson
instance encodeAccountKey :: EncodeJson AccountKey where
    encodeJson = Aeson.encodeJson
instance decodeAccount :: DecodeJson Account where
    decodeJson = Aeson.decodeJson
instance encodeAccount :: EncodeJson Account where
    encodeJson = Aeson.encodeJson

