-- File auto generated by purescript-bridge! --
module HUD.Dashboard.Data


where
import Data.Argonaut.Decode (class DecodeJson, decodeJson)
import Data.Argonaut.Encode (class EncodeJson, encodeJson)
import Data.Argonaut.Generic.Aeson as Aeson


import Data.Lens (Iso', Lens', Prism', lens, prism')
import Data.Lens.Iso.Newtype (_Newtype)
import Data.Lens.Record (prop)
import Data.Maybe (Maybe(..))
import Data.Newtype (class Newtype)
import Data.Symbol (SProxy(SProxy))
import Prim (Boolean)

import Prelude
import Data.Generic (class Generic)

newtype TokenState =
    TokenState {
      tsGithub :: Boolean
    , tsTrello :: Boolean
    , tsHeroku :: Boolean
    }

derive instance genericTokenState :: Generic TokenState

derive instance newtypeTokenState :: Newtype TokenState _


--------------------------------------------------------------------------------
_TokenState :: Iso' TokenState { tsGithub :: Boolean, tsTrello :: Boolean, tsHeroku :: Boolean}
_TokenState = _Newtype

tsGithub :: Lens' TokenState Boolean
tsGithub = _Newtype <<< prop (SProxy :: SProxy "tsGithub")

tsTrello :: Lens' TokenState Boolean
tsTrello = _Newtype <<< prop (SProxy :: SProxy "tsTrello")

tsHeroku :: Lens' TokenState Boolean
tsHeroku = _Newtype <<< prop (SProxy :: SProxy "tsHeroku")

--------------------------------------------------------------------------------
data HandlerException =
    MissingAuthToken
  | BadAuthToken
  | BadPassword
  | UnknownUser
  | IllegalPassword
  | NotFound
  | InternalFailure
  | MissingGithubToken
  | MissingTrelloToken
  | MissingHerokuToken

derive instance genericHandlerException :: Generic HandlerException


--------------------------------------------------------------------------------
_MissingAuthToken :: Prism' HandlerException Unit
_MissingAuthToken = prism' (\_ -> MissingAuthToken) f
  where
    f MissingAuthToken = Just unit
    f _ = Nothing

_BadAuthToken :: Prism' HandlerException Unit
_BadAuthToken = prism' (\_ -> BadAuthToken) f
  where
    f BadAuthToken = Just unit
    f _ = Nothing

_BadPassword :: Prism' HandlerException Unit
_BadPassword = prism' (\_ -> BadPassword) f
  where
    f BadPassword = Just unit
    f _ = Nothing

_UnknownUser :: Prism' HandlerException Unit
_UnknownUser = prism' (\_ -> UnknownUser) f
  where
    f UnknownUser = Just unit
    f _ = Nothing

_IllegalPassword :: Prism' HandlerException Unit
_IllegalPassword = prism' (\_ -> IllegalPassword) f
  where
    f IllegalPassword = Just unit
    f _ = Nothing

_NotFound :: Prism' HandlerException Unit
_NotFound = prism' (\_ -> NotFound) f
  where
    f NotFound = Just unit
    f _ = Nothing

_InternalFailure :: Prism' HandlerException Unit
_InternalFailure = prism' (\_ -> InternalFailure) f
  where
    f InternalFailure = Just unit
    f _ = Nothing

_MissingGithubToken :: Prism' HandlerException Unit
_MissingGithubToken = prism' (\_ -> MissingGithubToken) f
  where
    f MissingGithubToken = Just unit
    f _ = Nothing

_MissingTrelloToken :: Prism' HandlerException Unit
_MissingTrelloToken = prism' (\_ -> MissingTrelloToken) f
  where
    f MissingTrelloToken = Just unit
    f _ = Nothing

_MissingHerokuToken :: Prism' HandlerException Unit
_MissingHerokuToken = prism' (\_ -> MissingHerokuToken) f
  where
    f MissingHerokuToken = Just unit
    f _ = Nothing

--------------------------------------------------------------------------------
instance decodeTokenState :: DecodeJson TokenState where
    decodeJson = Aeson.decodeJson
instance encodeTokenState :: EncodeJson TokenState where
    encodeJson = Aeson.encodeJson
instance decodeHandlerException :: DecodeJson HandlerException where
    decodeJson = Aeson.decodeJson
instance encodeHandlerException :: EncodeJson HandlerException where
    encodeJson = Aeson.encodeJson

